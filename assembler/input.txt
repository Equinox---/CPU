main:
	j Normal
illop:	
	j Interrupt  #跳转到中断处理程序
xadr:	
	j Exit  #跳转到异常处理程序

Normal:
	jal Enable_Int 
	lui $a0,0x4000 #外设存储器基址
	lui $v0,0xffff
	addiu $v0,$v0,0xff00 #设置TH，决定定时器计数周期
	sw $v0,0($a0) #写入TH
	lui $v0,0xffff
	addiu $v0,$v0,0xffff
	sw $v0,1($a0) #写入TL,TL=0xffffffff
	lw $v1,3($a0) #获取switch输入值,存入$v1中
	sw $v1,4($a0) #送给led显示
	sw $zero,5($a0) #数码管初始化为"0000"
	addi $v0,$zero,0x0003
	sw $v0,2($a0) #启动定时器

	#开始计算最大公约数，原始输入数据存在$v1中
	andi $t0,$v1,0x000f
	srl $t1,$v1,4
	sub $t2,$t0,$t1 

Judge: 
	beq $t2,$zero,Exit  # $t2=0时计算结束
	bgtz $t2,Positive
Negative: 
	sub $t1,$t1,$t0
	sub $t2,$t0,$t1
	j Judge
Positive: 
	sub $t0,$t0,$t1
	sub $t2,$t0,$t1
	j Judge


Enable_Int:
	sll $ra,$ra,1
	srl $ra,$ra,1      # 置PC[31]为零，使能总中断
	jr $ra

Interrupt:
	addi $v0,$zero,0x0001
	sw $v0,2($a0)      # TCON=001，定时器中断禁止，中断状态清零
	addi $s3,$s2,0x0d00
	sw $s3,5($a0)      # 算得结果写入digit，译码显示
	addi $v0,$zero,0x0000
	sw $v0,2($a0)      # 使能定时器中断
	addi $26,$26,-4    # 将PC+4变为PC
	jr $26             # 即jr $Xp
		
Exit: 
	addi $s2,$t0,0      #将计算得到的结果写入寄存器$s2
		


